# name=modref-dlog

.include "M.dom"
.include "H.dom"
.include "F.dom"
.include "I.dom"
.include "V.dom"

.bddvarorder I0xM0_V0xV1_H0_F0_H1

###
# Relations
###

# use only these input relations
MgetInstFldInst(m:M0,l:V0,b:V1,f:F0) input
MputInstFldInst(m:M0,b:V0,f:F0,r:V1) input
MgetStatFldInst(m:M0,l:V0,f:F0) input
MputStatFldInst(m:M0,f:F0,r:V0) input
VH(v:V0,h:H0) input
MI(m:M0,i:I0) input
IM(i:I0,m:M0) input
reachableM(m:M0) input

# TODO: declare any intermediate relations you might need

# I need to find all the methods reachable from a method
# True if m1 is a descendent of m
descendants(m:M0,m1:M1)

# use only these output relations
refStatField(m:M0,f:F0) output
modStatField(m:M0,f:F0) output
refInstField(m:M0,h:H0,f:F0) output
modInstField(m:M0,h:H0,f:F0) output

###
# Constraints
###

# TODO: write constraints to compute above output relations

#*********************
# Populate descendants relation
#*********************
# Find all the methods that can be called from a given method, directly or transitively
# Base case: This is just a single level of transitivity
descendants(m, m1) :- MI(m,i),IM(i,m1).
# Inductive case: This makes it recursive so I can get all the descendants
descendants(m, m2) :- descendants(m,m1),MI(m1,i),IM(i,m2).

#**********************
# Referenced static fields
#**********************
# This only gets the fields references directly in a method
refStatField(m,f) :- reachableM(m), MgetStatFldInst(m,_,f).
# This gets all the referenced fields along a call graph path
refStatField(m,f) :- descendants(m,m1), MgetStatFldInst(m1,_,f).

#**********************
# modified static fields
#**********************
modStatField(m,f) :- reachableM(m), MputStatFldInst(m,f,_).
modStatField(m,f) :- descendants(m,m1), MputStatFldInst(m1,f,_).

#**********************
# Instance fields references
#**********************
refInstField(m,h,f) :- reachableM(m), VH(v,h),MgetInstFldInst(m,_,v,f).
refInstField(m,h,f) :- descendants(m,m1), VH(v,h), MgetInstFldInst(m1,_,v,f).

#***********************
# Modified instance fields
#***********************
modInstField(m,h,f) :- reachableM(m), VH(v,h), MputInstFldInst(m,v,f,_).
modInstField(m,h,f) :- descendants(m,m1), VH(v,h), MputInstFldInst(m1,v,f,_).



